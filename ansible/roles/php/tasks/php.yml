---
  - name: Install PHP7
    apt: name=php7.0-fpm state=installed

  - name: Install PHP7 CLI
    apt: name=php7.0-cli state=installed

  - name: Install PHP7 curl
    apt: name=php7.0-curl state=installed

  - name: Install PHP7 json
    apt: name=php7.0-json state=installed

  - name: Install PHP7 mysql
    apt: name=php7.0-mysql state=installed

  - name: Install PHP7 redis
    apt: name=php7.0-redis state=installed

  - name: Check if PHP Composer is installed.
    stat: "path={{ php_composer_path }}"
    register: composer_bin

  - name: Download Composer installer.
    get_url:
      url: https://getcomposer.org/installer
      dest: /tmp/composer-installer.php
      mode: 0755
    when: not composer_bin.stat.exists

  - name: Run PHP Composer installer.
    command: >
      php composer-installer.php
      chdir=/tmp
    when: not composer_bin.stat.exists

  - name: Move Composer into globally-accessible location.
    shell: >
      mv /tmp/composer.phar {{ php_composer_path }}
      creates={{ php_composer_path }}
    when: not composer_bin.stat.exists

  - name: Update Composer to latest version (if configured).
    shell: >
      php {{ php_composer_path }} self-update
    register: composer_update
    changed_when: "'Updating to version' in composer_update.stdout"
    when: php_composer_keep_updated

  - name: Create composer directory
    file:
      path: /var/www/.composer
      state: directory
      owner: www-data
      group: www-data

  - name: Add GitHub OAuth token for Composer (if configured).
    become: yes
    become_user: www-data
    template:
      src: "auth.json.j2"
      dest: ~/.composer/auth.json
      owner: www-data
      group: www-data
    when: php_composer_github_oauth_token != ''

#  - name: Install Composer
#    command: cd /tmp && curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer && chmod 777 /usr/local/bin/composer creates=/usr/local/bin/composer

  - name: Copy across php-sock.conf
    template:
      src=php-sock.conf
      dest=/etc/nginx/conf.d/php-sock.conf
    notify:
      - restart php

  - name: Copy across fastcgi_params
    template:
      src=fastcgi_params
      dest=/etc/nginx/fastcgi_params
    notify:
      - restart php

  - name: Install composer requirements
    become: yes
    become_user: www-data
    composer:
      command: install
      working_dir: /website

#  - name: Update PHP packages
#    shell: cd /website && composer update
#apt-get install php7.0-redis
